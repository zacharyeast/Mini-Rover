
#L298N:
# ENA -> GPIO22 which is BCM: GPIO25
# IN1 -> GPIO11 which is BCM: GPIO17
# IN2 -> GPIO12 which is BCM: GPIO18
# IN3 -> GPIO13 which is BCM: GPIO27
# IN4 -> GPIO18 which is BCM: GPIO24
# ENB -> GPIO36 which is BCM: GPIO16 
# 
# 
# OUT1 -> port(left) DC motor negative wire
# OUT2 -> port(left) DC motor positive wire
# 
# OUT3 -> starboard(right) DC motor positive wire
# OUT4 -> starboard(right) DC motor negative wire
#



import pygame
import RPi.GPIO as GPIO
import time
from pygame import mixer
from time import sleep
import sys
from pygame.locals import *

from picamera2.encoders import H264Encoder
from picamera2 import Picamera2, Preview
picam2 = Picamera2()
video_config = picam2.create_video_configuration(main={"size": (1920, 1080)}, lores={"size": (640, 480)}, display="lores")
picam2.configure(video_config)
encoder = H264Encoder(bitrate=10000000)
output = "test.h264"

picam2.start_preview(Preview.QTGL)
picam2.start_recording(encoder, output)

from adafruit_servokit import ServoKit
kit = ServoKit(channels=16)
GPIO.setwarnings(False)
#GPIO.setmode(GPIO.BCM)
GPIO.setup(17,GPIO.OUT)
GPIO.setup(18,GPIO.OUT)
GPIO.setup(27,GPIO.OUT)
GPIO.setup(24,GPIO.OUT)
GPIO.setup(25,GPIO.OUT)
GPIO.setup(16,GPIO.OUT)
GPIO.output(17,False)
GPIO.output(18,False)
GPIO.output(27,False)
GPIO.output(24,False)
GPIO.output(25,True)
GPIO.output(16,True)
keyslow = GPIO.PWM(25,100)
keyslow2 = GPIO.PWM(16,100)
keyslow.start(100)
keyslow2.start(100)
def stop():
    GPIO.output(17,0)
    GPIO.output(18,0)
    GPIO.output(27,0)
    GPIO.output(24,0)
def key_up():
    GPIO.output(17,False)
    GPIO.output(18,True)
    GPIO.output(27,False)
    GPIO.output(24,True)
def key_slow_q():
    keyslow.ChangeDutyCycle(29)
    keyslow2.ChangeDutyCycle(29)
    
def key_slow():
    keyslow.ChangeDutyCycle(29)
    keyslow2.ChangeDutyCycle(29)
def key_slow2():
    keyslow.ChangeDutyCycle(29)
    keyslow2.ChangeDutyCycle(29)    
def key_slow3():
    keyslow.ChangeDutyCycle(45)
    keyslow2.ChangeDutyCycle(45)   
def key_slowstop():
    keyslow.ChangeDutyCycle(100)
    keyslow2.ChangeDutyCycle(100)
def key_slowleft():
    keyslow.ChangeDutyCycle(66)
    keyslow2.ChangeDutyCycle(66)
    
def key_down():
    GPIO.output(17,True)
    GPIO.output(18,False)
    GPIO.output(27,True)
    GPIO.output(24,False)
def key_left():
    GPIO.output(17,True)
    GPIO.output(18,False)
    GPIO.output(27,False)
    GPIO.output(24,True)
def key_right():
    GPIO.output(17,False)
    GPIO.output(18,True)
    GPIO.output(27,True)
    GPIO.output(24,False)
def key_right2():
    GPIO.output(17,False)
    GPIO.output(18,True)
    GPIO.output(27,False)
    GPIO.output(24,False)
def key_left2():
    GPIO.output(17,False)
    GPIO.output(18,False)
    GPIO.output(27,False)
    GPIO.output(24,True)    

click_rect1  = pygame.Rect(160, 100, 60, 60) #1 (forward)
click_rect2  = pygame.Rect(220, 160, 60, 60) #2 (Right)
click_rect3  = pygame.Rect(100, 160, 60, 60) #3 (left) 
click_rect4  = pygame.Rect(160, 220, 60, 60) #4 (reverse)
click_rect5  = pygame.Rect(100, 100, 60, 60) #5 (slow left)
click_rect6  = pygame.Rect(220, 100, 60, 60) #6 (slow right)
click_rect7  = pygame.Rect(100, 220, 60, 60) #7 (tank left)
click_rect8  = pygame.Rect(220, 220, 60, 60) #8 (tank right)
click_rectp  = pygame.Rect(0, 0, 60, 60) #p
click_rectturnon = pygame.Rect(0, 100, 60, 60) # turn on
click_rectslowforward = pygame.Rect(160, 40, 60, 60) #slow forward
click_rectslowreverse = pygame.Rect(160, 160, 60, 60) #slow reverse

def motion_lapseslow_q():
    for i in range(1):
        key_slow_q()
        key_up()
        sleep(35)
        stop()
def motion_lapseslow2():
    for i in range(1):
        key_slow3()
        key_up()
def motion_lapseslow3():
    for i in range(1):
        key_slow3()
        key_right2()
        key_up()
        key_slow3()

# kit.servo[1].angle = 0
# kit.servo[3].angle = 0
# sleep(1)
# kit.servo[1].angle = 90
# kit.servo[3].angle = 90
# sleep(1)
def main():
    pygame.init()
    screen = pygame.display.set_mode((380, 380))
    pygame.display.set_caption('Rover Control')
    pygame.draw.rect(screen, (0, 128, 255), pygame.Rect(160, 100, 60, 60)) #1 (forward)
    pygame.draw.rect(screen, (128, 0, 128), pygame.Rect(220, 160, 60, 60)) #2 (Right)
    pygame.draw.rect(screen, (128, 128, 255), pygame.Rect(100, 160, 60, 60)) #3 (left) 
    pygame.draw.rect(screen, (128, 128, 0), pygame.Rect(160, 220, 60, 60)) #4 (reverse)
    pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(0, 0, 60, 60)) #p 
    pygame.draw.rect(screen, (100, 100, 100), pygame.Rect(100, 100, 60, 60)) #5 (slow left) 
    pygame.draw.rect(screen, (100, 100, 100), pygame.Rect(220, 100, 60, 60)) #6 (slow right)
    pygame.draw.rect(screen, (10, 55, 10), pygame.Rect(100, 220, 60, 60)) #7 (tank left)
    pygame.draw.rect(screen, (12, 35, 13), pygame.Rect(220, 220, 60, 60)) #8 (tank right)
    pygame.draw.rect(screen, (129, 25, 13), pygame.Rect(160, 40, 60, 60)) # slow forward
    pygame.draw.rect(screen, (1, 35, 55), pygame.Rect(160, 160, 60, 60)) #8 slow reverse    
    pygame.draw.rect(screen, (130, 35, 220), pygame.Rect(0, 100, 60, 60)) # turn on
    pygame.display.flip()
    
    while True:
    
        for event in pygame.event.get():            
            if event.type == pygame.QUIT:                
                pygame.quit()
                sys.exit()
#                GPIO.cleanup()
#                pygame.display.update()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:                    
                    GPIO.cleanup()
                    sys.exit()
                if event.key == pygame.K_UP:                    
                    kit.servo[1].angle = 0
                    kit.servo[3].angle = 0
                if event.key == pygame.K_DOWN:
                    kit.servo[1].angle = 90
                    kit.servo[3].angle = 90
                if event.key == pygame.K_LEFT:
                    key_left2()
                if event.key == pygame.K_RIGHT:
                    key_right2()
#                 if event.key == pygame.K_p:
#                     key_more()
#                 if event.key == pygame.K_o:
#                     key_more()
                if event.key == pygame.K_m:
                    key_right()
                if event.key == pygame.K_n:
                    key_left()
                if event.key == pygame.K_q:
                    motion_lapseslow_q()
                if event.key == pygame.K_e:
                    motion_lapseslow3()
#                if event.key == pygame.K_r:
                    
#                if event.key == pygame.K_t:
                    
                if event.key == pygame.K_y:
                    motion_lapseslow2()                    
                if event.key == pygame.K_s:
                    key_slow()
                    key_down()                    
                if event.key == pygame.K_a:
                    key_slowleft()
                    key_left()
                if event.key == pygame.K_d:
                    key_slowleft()
                    key_right()
                if event.key == pygame.K_KP_DIVIDE:
                    key_slow()
                    key_up()
                if event.key == pygame.K_KP1:
                    key_left()
                if event.key == pygame.K_KP2:
                    key_down()
                if event.key == pygame.K_KP3:
                    key_right()
                if event.key == pygame.K_KP4:
                    key_left2()
                if event.key == pygame.K_KP5:
                    key_slow()
                    key_down()
                if event.key == pygame.K_KP6:
                    key_right2()
                if event.key == pygame.K_KP7:
                    key_slowleft()
                    key_left()
                if event.key == pygame.K_KP8:
                    key_up()
                if event.key == pygame.K_KP9:
                    key_slowleft()
                    key_right()
                if event.key == pygame.K_d:
                    key_slowleft()
                    key_right()
        if event.type == pygame.KEYUP:
               if event.key == pygame.K_UP:
                   stop()
               if event.key == pygame.K_LEFT:
                   stop()
               if event.key == pygame.K_RIGHT:
                   stop()
               if event.key == pygame.K_DOWN:
                   stop()                
               if event.key == pygame.K_p:
                   recenter()
               if event.key == pygame.K_m:
                   stop()
               if event.key == pygame.K_n:
                   stop()                   
               if event.key == pygame.K_s:
                   stop()
                   key_slowstop()
               if event.key == pygame.K_r:
                   stop()
                   key_slowstop()                   
               if event.key == pygame.K_a:
                   stop()
                   key_slowstop()
               if event.key == pygame.K_d:
                   stop()
                   key_slowstop()
               if event.key == pygame.K_KP1:
                   stop()
               if event.key == pygame.K_KP2:
                   stop()
               if event.key == pygame.K_KP3:
                   stop()
               if event.key == pygame.K_KP4:
                   stop()
               if event.key == pygame.K_KP5:
                   stop()
                   key_slowstop()
               if event.key == pygame.K_KP6:
                   stop()
               if event.key == pygame.K_KP7:
                   stop()
                   key_slowstop()
               if event.key == pygame.K_KP8:
                   stop()
               if event.key == pygame.K_KP9:
                   stop()
                   key_slowstop()
               if event.key == pygame.K_KP_DIVIDE:
                   stop()
                   key_slowstop()                   
        if event.type == pygame.MOUSEBUTTONDOWN:
                mouse_position = pygame.mouse.get_pos()
                if (click_rect1.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_up()                        
                if (click_rect2.collidepoint(mouse_position)):
                    if event.button == 1:
                        key_right2()                        
                if (click_rect3.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_left2()
                if (click_rect7.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_left()
                if (click_rect8.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_right()                      
                if (click_rect4.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_down()
                if (click_rect5.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_slowleft()
                        key_left()
                if (click_rect6.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_slowleft()
                        key_right()                       
                if (click_rectp.collidepoint(mouse_position)):
                    if event.button == 1: #left click to rock the servo, then release 
                        sleep(1)
                if (click_rectp.collidepoint(mouse_position)):
                    if event.button == 2: #right click to toggle the servo, then left click to release 
                        sleep(1)                     
                if (click_rectp.collidepoint(mouse_position)):
                    if event.button == 3: #right click to toggle the servo, then left click to release 
                        sleep(1)
                if (click_rectslowforward.collidepoint(mouse_position)):
                    if event.button == 1: 
                        key_slow()
                        key_up()
                if (click_rectslowreverse.collidepoint(mouse_position)):
                    if event.button == 1:                         
                        key_slow()
                        key_down()
        if event.type == pygame.MOUSEBUTTONUP:
                if event.button == 1:
                    if (click_rect1.collidepoint(mouse_position)):
                        stop()           
                if event.button == 1:
                    if (click_rectp.collidepoint(mouse_position)):
                        stop() 
                if event.button == 2:
                    if (click_rectp.collidepoint(mouse_position)):
                        sleep(1)
                if event.button == 3:
                    if (click_rectp.collidepoint(mouse_position)):
                        sleep(1)

                if event.button == 1:
                    if (click_rect2.collidepoint(mouse_position)):
                        stop()
                if event.button == 1:
                    if (click_rect3.collidepoint(mouse_position)):
                        stop()
                if event.button == 1:
                    if (click_rect5.collidepoint(mouse_position)):
                        stop()
                        key_slowstop()
                if event.button == 1:
                    if (click_rect6.collidepoint(mouse_position)):
                        stop()
                        key_slowstop()                        
                if event.button == 1:
                    if (click_rect4.collidepoint(mouse_position)):
                        stop()
                if event.button == 1:
                    if (click_rect7.collidepoint(mouse_position)):
                        stop()                          
                if event.button == 1:
                    if (click_rect8.collidepoint(mouse_position)):
                        stop()                          
                if event.button == 1:
                    if (click_rectslowforward.collidepoint(mouse_position)):                
                       stop()
                       key_slowstop()
                if event.button == 1:
                    if (click_rectslowreverse.collidepoint(mouse_position)):                
                       stop()
                       key_slowstop() 
                elif event.button == 3:
                    stop()
main()
 
